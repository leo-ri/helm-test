## MongoDB Enterprise Database

# Set this to true if your cluster is managing SecurityContext for you.
# If running OpenShift (Cloud, Minishift, etc.), set this to true.
managedSecurityContext: false

# Section to describe components that needs to be installed
mongodb-enterprise-operator:
  enabled: true
  watchOpsManager: false
  watchDatabase: true

# Optional configuration.
deployValidationWebhooks: true

name: mdbreplset
type: ReplicaSet
version: 4.4.2-ent
backup: false

# Cluster type selection
replicaSet:
  members: 3


opsManager:
  # Ops Manager connection could be configured  with Values and This HELM chart will create
  # nesessary Secret and Config Map.
  URL: ""
  orgid: ""
  APIKey: ""
  APISecret: ""
  # Alternatevly an existing secret and config map could be provided directly
  configMap:
  secretRef:

security:
  authentication:
    modes: ["SCRAM"]  # Valid authentication modes are "SCRAM", "LDAP" and "X509"
  tls:
    enabled: false
    caRef: mdbreplset-ca
    # Note: Operator would expect Pem secret to have name: <metadata.name>-cert

resources:
  limits:
    cpu: 1
    memory: 1G
  requests:
    cpu: 1
    memory: 1G
tolerations: []

agent:
  startupOptions:
    maxLogFiles: "30"
    dialTimeoutSeconds: "40"

persistence:
  single:
    storage: 1Gi
#   storageClass: standard
# multiple:
#   data:
#     storage: 10Gi
#   journal:
#     storage: 1Gi
#     labelSelector:
#       matchLabels:
#         app: "my-app"
#   logs:
#     storage: 500M
# storageClass: standard

clusterName: cluster.local

additionalMongodConfig:
  storageEngine: wiredTiger

# External connectivity configuration
# https://docs.mongodb.com/kubernetes-operator/master/tutorial/connect-from-outside-k8s/
externalConnectivity:
  enable: false
  replicaSetHorizons:
    - "example-website": "web1.example.com:30907"
    - "example-website": "web2.example.com:32350"
    - "example-website": "web3.example.com:31185"

registry:
  imagePullSecrets:
  # TODO: specify for each image and move there?
  pullPolicy: Always
  # Specify if images are pulled from private registry

users:
  - username: admin-user
    db: admin
    password: "%SomeLong%password$foradmin"
    roles:
      - db: admin
        name: clusterAdmin
      - db: admin
        name: userAdminAnyDatabase
      - db: admin
        name: readWrite
      - db: admin
        name: userAdminAnyDatabase
  - username: app-user
    db: admin
    password: "%SomeLong%password$"
    roles:
      - db: admin
        name: readWriteAnyDatabase
