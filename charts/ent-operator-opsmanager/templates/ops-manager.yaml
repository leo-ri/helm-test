---
apiVersion: mongodb.com/v1
kind: MongoDBOpsManager
metadata:
  name: {{ .Release.Name }}-ops-manager
  namespace: {{ .Release.Namespace }}
  labels:
    "helm.sh/chart": {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    "app.kubernetes.io/managed-by": {{ .Release.Service }}

spec:
  replicas: {{ .Values.replicas | default 1 }}
  version: {{ .Values.version | default "4.4.6" }}
  adminCredentials: {{ .Values.name }}-global-admin
  persistent: true

  # For the full list of options see https://docs.opsmanager.mongodb.com/current/reference/configuration/index.html
  configuration:
    {{- toYaml .Values.configuration | nindent 4 }}

  statefulSet:
    spec:      
      {{- if .Values.installerVolumeSize }}
      # the Persistent Volume Claim will be created for each Ops Manager Pod
      volumeClaimTemplates:
        - metadata:
            name: mongodb-versions
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: {{ .Values.installerVolumeSize }}

      template:
        spec:
          containers:
            - name: mongodb-ops-manager
              volumeMounts:
                - name: mongodb-versions
                  # this is the directory in each Pod where all MongoDB
                  # archives must be put
                  mountPath: /mongodb-ops-manager/mongodb-releases                  
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{ else }}
      template:
        spec:
          containers:
            - name: mongodb-ops-manager
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}      
      {{ end }}

  # Exposing Ops Manager to External DNS: AWK EKS exmaple
  externalConnectivity:
    # LoadBalancer|NodePort
    type: LoadBalancer


  # optional. Enabled by default
  # Allows to configure backup in Ops Manager
  backup:
    enabled: {{ .Values.backup.enabled | default true }}
    # optional. Configured by default if backup is enabled.
    # Configures Head db storage parameters
  {{- if .Values.backup.enabled }}    
    headDB:
      # optional. Default storage is 30G
      storage: 50G

    # Configures the list of Oplog Store Configs

    opLogStores:
      - name: {{ .Values.backup.opLog.name }}
        # reference to MongoDB Custom Resource. The Operator watches changes in it and updates Oplog configuration
        # in Ops Manager
        mongodbResourceRef:
          name: {{ .Values.backup.opLog.mongodbResourceRef }}
        # optional. Specify if Oplog database has SCRAM-SHA authentication enabled
        mongodbUserRef:
          name: {{ .Values.backup.opLog.mongodbUserRef }}
    
    # Configures the list of S3 Snapshot Configs. Application database is used as a database for S3 metadata
    # by default
    # Note, that either S3 Snapshot or Blockstore config needs to be specified to backup MongoDB deployments
    {{- if .Values.backup.configureObjectStore }}
    {{- with .Values.backup.s3Stores }}
    s3Stores:
      - name: {{ .name }}
        # the name of the secret which contains aws credentials
        s3SecretRef:
          name: {{ .s3SecretRef }}
        s3BucketEndpoint: {{ .s3BucketEndpoint }}
        s3BucketName: {{ .s3BucketName }}
        pathStyleAccessEnabled: {{ .pathStyleAccessEnabled }}
    {{- end }}
    {{- end }}

    # Configures the list of Blockstore Configs
    {{- if .Values.backup.configureBlockStore }}
    blockStores:
      - name: blockStore1
        # reference to MongoDB Custom Resource. The Operator watches changes in it and updates Blockstore configuration
        # in Ops Manager
        mongodbResourceRef:
          name: my-mongodb-blockstore
    {{- end }}
  {{- end }}
  applicationDatabase:
    members: 3
    persistent: true
